<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Fact Analyzer</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-document" aria-hidden="true"></span> The Facts
            </NavLink>

            <NavLink class="nav-link" href="/list" Match="NavLinkMatch.All">
                <span class="oi oi-question-mark" aria-hidden="true"></span> List 
            </NavLink>

            <NavLink class="nav-link" href="/analyze" Match="NavLinkMatch.All">
                <span class="oi oi-star" aria-hidden="true"></span> Analyze
            </NavLink>

            @if (isAuthenticated)
            {
                <NavLink class="nav-link" href="/admin" Match="NavLinkMatch.All">
                    <span class="oi oi-lock-locked" aria-hidden="true"></span> Admin Panel
                </NavLink>
            }
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool isAuthenticated;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
    }

    [Inject]
    private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;
}